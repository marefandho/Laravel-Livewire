name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: mstore_user
          POSTGRES_PASSWORD: mstore12345
          POSTGRES_DB: mstore_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U mstore_user -d mstore"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pgsql, bcmath
          coverage: none
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install Composer dependencies & build frontend
        run: | 
          composer install --prefer-dist --no-progress --no-suggest
          npm install
          npm run build
      
      - name: Copy .env
        run: |
          cp .env.example .env 

      - name: Generate application key
        run: php artisan key:generate --env=testing

      - name: Configure database
        run: php artisan migrate --force --env=testing

      - name: Run tests
        run: php artisan test --parallel --recreate-databases --env=testing
  
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pgsql, bcmath
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install Composer dependencies & build frontend
        run: | 
          composer install --prefer-dist --no-progress --no-suggest
          npm install
          npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mstore-livewire
          path: |
            vendor
            public/build
            bootstrap/cache
            app
            routes
            config